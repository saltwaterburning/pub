{
	"openapi": "3.0.1",
	"info": {
		"contact": {
			"email": "chuck.marco@prattwhitney.com",
			"name": "Chuck Marco",
			"url": "https://www.dbds.com"
		},
		"description": "DOME Application RESTful API for shop use.",
		"title": "Digital Overhaul Management of Engines",
		"version": "2024-11-11"
	},
	"externalDocs": {
		"description": "Project SharePoint"
	},
	"servers": [
		{
			"url": "http://192.168.3.171:81/dome",
			"description": "DBDS Devlelopment"
		},
		{
			"url": "http://192.168.3.171:82/dome",
			"description": "DBDS Stage"
		},
		{
			"url": "https://dome-ui-test.prattwhitney.com/dome",
			"description": "P&W Stage"
		}
	],
	"security": [
		{
			"bearerAuth": [
			]
		}
	],
	"tags": [
		{
			"description": "MRO (maintenance, repair and operations) Collaboration API.",
			"name": "MRO Collab"
		}
	],
	"paths": {
		"/v1/external/shipping/dome-shipping-details": {
			"post": {
				"description": "Updates the matching DOME record with the actual shipping information.",
				"operationId": "updateEngineComments",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ShipDatesRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Success"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully updated the matching DOME record."
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Invalid request."
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "The matching DOME record was not found."
					}
				},
				"tags": [
					"ShipDates"
				]
			}
		}
	},
	"components": {
		"schemas": {
			"ErrorResponse": {
				"type": "object",
				"description": "Application response schema.",
				"properties": {
					"errors": {
						"type": "array",
						"description": "Chain of application error messages.",
						"items": {
							"type": "string",
							"description": "Chain of application error messages."
						}
					},
					"message": {
						"type": "string",
						"description": "Application message."
					},
					"reason": {
						"type": "string",
						"description": "The HttpStatus Reason Phrase  (e.g., NOT FOUND)."
					},
					"status": {
						"type": "string",
						"description": "The HttpStatus name (e.g., NOT_FOUND)."
					},
					"statusCode": {
						"type": "integer",
						"description": "The HttpStatus value  (e.g., 404).",
						"format": "int32"
					}
				}
			},
			"ShipDatesRequest": {
				"type": "object",
				"properties": {
					"actualArrivalEBUDate": {
						"type": "string",
						"description": "The EBU actual arrival date or null if none. ISO 8601 format (yyyy-MM-dd) required.",
						"format": "date"
					},
					"actualArrivalMaintCenterDate": {
						"type": "string",
						"description": "The maintenance center actual arrival date or null if none.  ISO 8601 format (yyyy-MM-dd) required.",
						"format": "date"
					},
					"airwayBill": {
						"type": "string",
						"description": "The airway bill or null if none."
					},
					"currentLocation": {
						"type": "string",
						"description": "The current location or null if none."
					},
					"engineSerialNumber": {
						"type": "string",
						"description": "The mandatory engine serial number (ESN)."
					},
					"estimatedArrivalEBUDate": {
						"type": "string",
						"description": "The EBU estimated time of arrival or null if none. ISO 8601 format (yyyy-MM-dd) required.",
						"format": "date"
					},
					"estimatedArrivalMaintCenterDate": {
						"type": "string",
						"description": "The maintenance center estimated time of arrival date or null if none. ISO 8601 format (yyyy-MM-dd) required.",
						"format": "date"
					},
					"pickUpDate": {
						"type": "string",
						"description": "The pickup date or null if none. ISO 8601 format (yyyy-MM-dd) required.",
						"format": "date"
					},
					"shipmentStatus": {
						"type": "string",
						"description": "The shipping status or null if none."
					},
					"shippingCompany": {
						"type": "string",
						"description": "The shipping company or null if none."
					}
				},
				"required": [
					"engineSerialNumber"
				]
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"bearerFormat": "jwt",
				"description": "JWT Bearer Authorization.",
				"scheme": "bearer",
				"type": "http"
			}
		}
	}
}
