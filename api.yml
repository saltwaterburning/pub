{
	"openapi": "3.0.1",
	"info": {
		"contact": {
			"email": "chuck.marco@prattwhitney.com",
			"name": "Chuck Marco",
			"url": "https://www.dbds.com"
		},
		"description": "DOME Application RESTful Forecasting MML API.",
		"title": "Digital Overhaul Management of Engines",
		"version": "2024-11-27"
	},
	"externalDocs": {
		"description": "Project SharePoint"
	},
	"servers": [
		{
			"url": "http://192.168.3.171:81/dome",
			"description": "DBDS Devlelopment"
		},
		{
			"url": "http://192.168.3.171:82/dome",
			"description": "DBDS Stage"
		},
		{
			"url": "https://dome-ui-test.prattwhitney.com/dome",
			"description": "P&W Stage"
		}
	],
	"security": [
		{
			"bearerAuth": [
			]
		}
	],
	"tags": [
		{
			"description": "MRO (maintenance, repair and operations) Collaboration API.",
			"name": "MRO Collab"
		}
	],
	"paths": {
		"/v1/forecast/annual/le/planned-monthly": {
			"patch": {
				"description": "Update the monthly quantity forecast (MML) record(s) with any user changes.",
				"operationId": "updateMonthlyPlans_2",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyMonthlyResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns details the annual forecast by month (MML) for the provided request.",
				"operationId": "getMonthlyQtyPlans_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MonthlyQtyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlQtyMonthlyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/annual/le/planned-weekly": {
			"patch": {
				"description": "Update the weekly quantity forecast (MML) record(s) with any user changes.",
				"operationId": "updateWeeklyPlans_2",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyWeeklyResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns details the annual forecast by week (MML) for the provided request.",
				"operationId": "getWeeklyQtyPlans_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "WeeklyQtyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlQtyWeeklyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/annual/mml/planned-monthly": {
			"patch": {
				"description": "Update the monthly quantity forecast (MML) record(s) with any user changes.",
				"operationId": "updateMonthlyPlans_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyMonthlyResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns the monthly quantity forecast (MML) details for the provided request.",
				"operationId": "getMonthlyQtyPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MonthlyQtyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlQtyMonthlyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/annual/mml/planned-weekly": {
			"patch": {
				"description": "Update the weekly quantity forecast (MML) record(s) with any user changes.",
				"operationId": "updateWeeklyPlans_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyWeeklyResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns the weekly quantity forecast (MML) details for the provided request.",
				"operationId": "getWeeklyQtyPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlQtyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "WeeklyQtyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlQtyWeeklyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/annual/planned-monthly": {
			"patch": {
				"description": "Update the annual monthly forecast (MML) record(s) with any user changes.",
				"operationId": "updateMonthlyPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnnualMonthlyForecastPlanResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns the annual planned monthly forecast (MML) details for the provided request.",
				"operationId": "getMonthlyAnnualPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnnualPlanRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "AnnualMonthlyForecastPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/AnnualMonthlyForecastPlanResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/annual/planned-weekly": {
			"patch": {
				"description": "Update the annual planned weekly forecast (MML) record(s) with any user changes.",
				"operationId": "updateWeeklyPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnnualWeeklyForecastPlanResponse"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting Annual (aka MML)"
				]
			},
			"post": {
				"description": "Returns the annual planned weekly forecast (MML) details for the provided request.",
				"operationId": "getWeeklyAnnualPlans",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnnualPlanRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "AnnualWeeklyForecastPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/AnnualWeeklyForecastPlanResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting Annual (aka MML)"
				]
			}
		},
		"/v1/forecast/le/monthly": {
			"post": {
				"description": "Returns the monthly forecast (MML) details for the provided request.",
				"operationId": "getMonthlyData_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlMonthlyPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlMonthlyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			}
		},
		"/v1/forecast/le/planned-monthly": {
			"patch": {
				"description": "Update the monthly MML record(s) with any user changes.",
				"operationId": "updateMonthlyData_1",
				"parameters": [
					{
						"description": "Copy to monthly",
						"in": "query",
						"name": "copy-to-monthly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyUpdateRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh monthly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh monthly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			},
			"post": {
				"description": "Returns the planned monthly forecast (MML) details for the provided request.",
				"operationId": "getMonthlyPlanData_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlMonthlyPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlMonthlyPlanResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			}
		},
		"/v1/forecast/le/planned-weekly": {
			"patch": {
				"description": "Update the weekly MML record(s) with any user changes.",
				"operationId": "updateWeeklyData_1",
				"parameters": [
					{
						"description": "Copy to monthly",
						"in": "query",
						"name": "copy-to-monthly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyUpdateRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			},
			"post": {
				"description": "Returns the planned weekly forecast (MML) details for the provided request.",
				"operationId": "getWeeklyPlanData_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Success"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			}
		},
		"/v1/forecast/le/weekly": {
			"post": {
				"description": "Returns the weekly forecast (MML) details for the provided request.",
				"operationId": "getWeeklyData_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlWeeklyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlWeeklyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting LE (aka MML)"
				]
			}
		},
		"/v1/forecast/mml/monthly": {
			"post": {
				"description": "Returns the monthly forecast (MML) details for the provided request.",
				"operationId": "getMonthlyData",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlMonthlyPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlMonthlyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			}
		},
		"/v1/forecast/mml/planned-monthly": {
			"patch": {
				"description": "Update the monthly MML record(s) with any user changes.",
				"operationId": "updateMonthlyData",
				"parameters": [
					{
						"description": "Copy to monthly",
						"in": "query",
						"name": "copy-to-monthly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyUpdateRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh monthly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh monthly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			},
			"post": {
				"description": "Returns the planned monthly forecast (MML) details for the provided request.",
				"operationId": "getMonthlyPlanData",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlMonthlyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlMonthlyPlanResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlMonthlyPlanResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			}
		},
		"/v1/forecast/mml/planned-weekly": {
			"patch": {
				"description": "Update the weekly MML record(s) with any user changes.",
				"operationId": "updateWeeklyData",
				"parameters": [
					{
						"description": "Copy to monthly",
						"in": "query",
						"name": "copy-to-monthly",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyUpdateRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Void (no body)"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request and no user changes detected. Client should not make another request to refresh weekly details."
					},
					"201": {
						"content": {
							"application/json": {
								"examples": {
									"CREATED": {
										"description": "CREATED",
										"value": "Void (no body)"
									}
								}
							}
						},
						"description": "Successfully processed the provided request and user changes were detected. Client should make another request to refresh weekly details."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			},
			"post": {
				"description": "Returns the planned weekly forecast (MML) details for the provided request.",
				"operationId": "getWeeklyPlanData",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "Success"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			}
		},
		"/v1/forecast/mml/weekly": {
			"post": {
				"description": "Returns the weekly forecast (MML) details for the provided request.",
				"operationId": "getWeeklyData",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MmlWeeklyRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"examples": {
									"OK": {
										"description": "OK",
										"value": "MmlWeeklyResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/MmlWeeklyResponse"
								}
							}
						},
						"description": "Successfully processed the provided request."
					},
					"400": {
						"content": {
							"application/json": {
								"examples": {
									"BAD_REQUEST": {
										"description": "BAD_REQUEST",
										"value": "ErrorResponse"
									}
								},
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						},
						"description": "Bad request."
					}
				},
				"tags": [
					"Forecasting MML (aka MML)"
				]
			}
		}
	},
	"components": {
		"schemas": {
			"AnnualMonthlyForecastPlanDetails": {
				"type": "object",
				"properties": {
					"category": {
						"type": "string"
					},
					"engCenterId": {
						"type": "string"
					},
					"engCenterName": {
						"type": "string"
					},
					"engGroupId": {
						"type": "string"
					},
					"engGroupName": {
						"type": "string"
					},
					"monthlyPlans": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AnnualMonthlyPlan"
						}
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"planYear": {
						"type": "integer",
						"format": "int32"
					},
					"salesOrderType": {
						"type": "string"
					}
				},
				"required": [
					"category",
					"engCenterId",
					"engGroupId",
					"monthlyPlans",
					"planCalendar",
					"planMarket",
					"planType",
					"planYear",
					"salesOrderType"
				]
			},
			"AnnualMonthlyForecastPlanResponse": {
				"type": "object",
				"properties": {
					"annualPlanDetails": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AnnualMonthlyForecastPlanDetails"
						}
					}
				},
				"required": [
					"annualPlanDetails"
				]
			},
			"AnnualMonthlyPlan": {
				"type": "object",
				"properties": {
					"planCounter": {
						"type": "integer",
						"format": "int32"
					},
					"planId": {
						"type": "integer",
						"format": "int32"
					},
					"planMonth": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"AnnualPlanRequest": {
				"type": "object",
				"properties": {
					"engineCenterId": {
						"type": "string"
					},
					"engineGroupId": {
						"type": "string"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"year": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"planCalendar",
					"planMarket",
					"planType",
					"year"
				]
			},
			"AnnualWeeklyForecastPlanDetails": {
				"type": "object",
				"properties": {
					"category": {
						"type": "string"
					},
					"engCenterId": {
						"type": "string"
					},
					"engCenterName": {
						"type": "string"
					},
					"engGroupId": {
						"type": "string"
					},
					"engGroupName": {
						"type": "string"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"planYear": {
						"type": "integer",
						"format": "int32"
					},
					"salesOrderType": {
						"type": "string"
					},
					"weeklyPlans": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AnnualWeeklyPlan"
						}
					}
				},
				"required": [
					"category",
					"engCenterId",
					"engGroupId",
					"planCalendar",
					"planMarket",
					"planType",
					"planYear",
					"salesOrderType",
					"weeklyPlans"
				]
			},
			"AnnualWeeklyForecastPlanResponse": {
				"type": "object",
				"properties": {
					"annualPlanDetails": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AnnualWeeklyForecastPlanDetails"
						}
					}
				},
				"required": [
					"annualPlanDetails"
				]
			},
			"AnnualWeeklyPlan": {
				"type": "object",
				"properties": {
					"planCounter": {
						"type": "integer",
						"format": "int32"
					},
					"planId": {
						"type": "integer",
						"format": "int32"
					},
					"planWeek": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"ErrorResponse": {
				"type": "object",
				"description": "Application response schema.",
				"properties": {
					"errors": {
						"type": "array",
						"description": "Chain of application error messages.",
						"items": {
							"type": "string",
							"description": "Chain of application error messages."
						}
					},
					"message": {
						"type": "string",
						"description": "Application message."
					},
					"reason": {
						"type": "string",
						"description": "The HttpStatus Reason Phrase  (e.g., NOT FOUND)."
					},
					"status": {
						"type": "string",
						"description": "The HttpStatus name (e.g., NOT_FOUND)."
					},
					"statusCode": {
						"type": "integer",
						"description": "The HttpStatus value  (e.g., 404).",
						"format": "int32"
					}
				}
			},
			"MmlMonthlyDetails": {
				"type": "object",
				"description": "Monthly MML forecasting details.",
				"properties": {
					"actualReceipentDate": {
						"type": "string",
						"description": "EngineTrack actual receive date.",
						"format": "date"
					},
					"customerName": {
						"type": "string",
						"description": "Engine customer name."
					},
					"engineCategory": {
						"type": "string",
						"description": "Engine category."
					},
					"engineCenterName": {
						"type": "string",
						"description": "Engine center name."
					},
					"engineGroupId": {
						"type": "string",
						"description": "Engine group Id."
					},
					"engineGroupName": {
						"type": "string",
						"description": "Engine group name."
					},
					"engineId": {
						"type": "integer",
						"description": "Engine Id.",
						"format": "int32"
					},
					"engineSerialNumber": {
						"type": "string",
						"description": "Engine serial number."
					},
					"month": {
						"type": "integer",
						"description": "Month of the year.",
						"format": "int32"
					},
					"planId": {
						"type": "integer",
						"description": "DB Plan record Id.",
						"format": "int32"
					},
					"planInductionDate": {
						"type": "string",
						"description": "EngineTrack planned induction date.",
						"format": "date"
					},
					"year": {
						"type": "integer",
						"description": "The selected year.",
						"format": "int32"
					}
				},
				"required": [
					"actualReceipentDate",
					"customerName",
					"engineCategory",
					"engineCenterName",
					"engineGroupId",
					"engineGroupName",
					"engineId",
					"engineSerialNumber",
					"month",
					"planInductionDate"
				]
			},
			"MmlMonthlyPlanResponse": {
				"type": "object",
				"description": "Response with monthly MML planned forecasting details.",
				"properties": {
					"mmlPlanDetails": {
						"type": "array",
						"description": "Collection of monthly MML planned forecasting details.",
						"items": {
							"$ref": "#/components/schemas/MmlMonthlyDetails"
						}
					}
				},
				"required": [
					"mmlPlanDetails"
				]
			},
			"MmlMonthlyRequest": {
				"type": "object",
				"description": "Request for monthly MML forecasting details.",
				"properties": {
					"engineCenterId": {
						"type": "string",
						"description": "The selected engine center Id."
					},
					"engineGroupId": {
						"type": "string",
						"description": "The selected engine group Id."
					},
					"month": {
						"maximum": 12,
						"minimum": 1,
						"type": "integer",
						"description": "The month number.",
						"format": "int32"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"year": {
						"type": "integer",
						"description": "The selected plan year.",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"month",
					"planCalendar",
					"planMarket",
					"planType",
					"year"
				]
			},
			"MmlMonthlyResponse": {
				"type": "object",
				"description": "Response with monthly MML forecasting details.",
				"properties": {
					"mmlDetails": {
						"type": "array",
						"description": "Collection of monthly MML forecasting details.",
						"items": {
							"$ref": "#/components/schemas/MmlMonthlyDetails"
						}
					}
				},
				"required": [
					"mmlDetails"
				]
			},
			"MmlMonthlyUpdateRequest": {
				"type": "object",
				"description": "Update request for monthly MML forecasting.",
				"properties": {
					"engineCenterId": {
						"type": "string",
						"description": "The selected engine center Id."
					},
					"engineGroupId": {
						"type": "string",
						"description": "The selected engine group Id."
					},
					"mmlDetails": {
						"type": "array",
						"description": "Collection of monthly MML forecasting details.",
						"items": {
							"$ref": "#/components/schemas/MmlMonthlyDetails"
						}
					},
					"month": {
						"maximum": 12,
						"minimum": 1,
						"type": "integer",
						"description": "The month number.",
						"format": "int32"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"year": {
						"type": "integer",
						"description": "The selected plan year.",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"mmlDetails",
					"month",
					"planCalendar",
					"planMarket",
					"planType",
					"year"
				]
			},
			"MmlQtyMonthlyPlan": {
				"type": "object",
				"description": "Plans by month.",
				"properties": {
					"planCounter": {
						"type": "integer",
						"format": "int32"
					},
					"planId": {
						"type": "integer",
						"format": "int32"
					},
					"planMonth": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"MmlQtyMonthlyPlanDetails": {
				"type": "object",
				"description": "Monthly plan details for the year.",
				"properties": {
					"category": {
						"type": "string"
					},
					"engCenterId": {
						"type": "string"
					},
					"engCenterName": {
						"type": "string"
					},
					"engGroupId": {
						"type": "string"
					},
					"engGroupName": {
						"type": "string"
					},
					"monthlyPlans": {
						"type": "array",
						"description": "Plans by month.",
						"items": {
							"$ref": "#/components/schemas/MmlQtyMonthlyPlan"
						}
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"planYear": {
						"type": "integer",
						"format": "int32"
					},
					"salesOrderType": {
						"type": "string"
					}
				},
				"required": [
					"category",
					"engCenterId",
					"engGroupId",
					"monthlyPlans",
					"planCalendar",
					"planMarket",
					"planType",
					"planYear",
					"salesOrderType"
				]
			},
			"MmlQtyMonthlyResponse": {
				"type": "object",
				"description": "Annual plan details by month response.",
				"properties": {
					"annualPlanDetails": {
						"type": "array",
						"description": "Monthly plan details for the year.",
						"items": {
							"$ref": "#/components/schemas/MmlQtyMonthlyPlanDetails"
						}
					}
				},
				"required": [
					"annualPlanDetails"
				]
			},
			"MmlQtyRequest": {
				"type": "object",
				"properties": {
					"engineCenterId": {
						"type": "string"
					},
					"engineGroupId": {
						"type": "string"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"year": {
						"type": "integer",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"planCalendar",
					"planMarket",
					"planType",
					"year"
				]
			},
			"MmlQtyWeeklyPlan": {
				"type": "object",
				"description": "Plans by week.",
				"properties": {
					"planCounter": {
						"type": "integer",
						"format": "int32"
					},
					"planId": {
						"type": "integer",
						"format": "int32"
					},
					"planWeek": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"MmlQtyWeeklyPlanDetails": {
				"type": "object",
				"description": "Weekly plan details for the year.",
				"properties": {
					"category": {
						"type": "string"
					},
					"engCenterId": {
						"type": "string"
					},
					"engCenterName": {
						"type": "string"
					},
					"engGroupId": {
						"type": "string"
					},
					"engGroupName": {
						"type": "string"
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"planYear": {
						"type": "integer",
						"format": "int32"
					},
					"salesOrderType": {
						"type": "string"
					},
					"weeklyPlans": {
						"type": "array",
						"description": "Plans by week.",
						"items": {
							"$ref": "#/components/schemas/MmlQtyWeeklyPlan"
						}
					}
				},
				"required": [
					"category",
					"engCenterId",
					"engGroupId",
					"planCalendar",
					"planMarket",
					"planType",
					"planYear",
					"salesOrderType",
					"weeklyPlans"
				]
			},
			"MmlQtyWeeklyResponse": {
				"type": "object",
				"description": "Annual plan details by week response.",
				"properties": {
					"annualPlanDetails": {
						"type": "array",
						"description": "Weekly plan details for the year.",
						"items": {
							"$ref": "#/components/schemas/MmlQtyWeeklyPlanDetails"
						}
					}
				},
				"required": [
					"annualPlanDetails"
				]
			},
			"MmlWeeklyDetails": {
				"type": "object",
				"description": "Weekly MML forecasting details.",
				"properties": {
					"actualReceipentDate": {
						"type": "string",
						"description": "EngineTrack actual receive date.",
						"format": "date"
					},
					"customerName": {
						"type": "string",
						"description": "Engine customer name."
					},
					"engineCategory": {
						"type": "string",
						"description": "Engine category."
					},
					"engineCenterName": {
						"type": "string",
						"description": "Engine center name."
					},
					"engineGroupId": {
						"type": "string",
						"description": "Engine group Id."
					},
					"engineGroupName": {
						"type": "string",
						"description": "Engine group name."
					},
					"engineId": {
						"type": "integer",
						"description": "Engine Id.",
						"format": "int32"
					},
					"engineSerialNumber": {
						"type": "string",
						"description": "Engine serial number."
					},
					"planId": {
						"type": "integer",
						"description": "DB Plan record Id.",
						"format": "int32"
					},
					"planInductionDate": {
						"type": "string",
						"description": "EngineTrack planned induction date.",
						"format": "date"
					},
					"week": {
						"type": "integer",
						"description": "Week of the year.",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"description": "The selected year.",
						"format": "int32"
					}
				},
				"required": [
					"actualReceipentDate",
					"customerName",
					"engineCategory",
					"engineCenterName",
					"engineGroupId",
					"engineGroupName",
					"engineId",
					"engineSerialNumber",
					"planInductionDate",
					"week"
				]
			},
			"MmlWeeklyRequest": {
				"type": "object",
				"description": "Request for weekly MML forecasting details.",
				"properties": {
					"engineCenterId": {
						"type": "string",
						"description": "The selected engine center Id."
					},
					"engineGroupId": {
						"type": "string",
						"description": "The selected engine group Id."
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"week": {
						"maximum": 52,
						"minimum": 1,
						"type": "integer",
						"description": "The week number.",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"description": "The selected plan year.",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"planCalendar",
					"planMarket",
					"planType",
					"week",
					"year"
				]
			},
			"MmlWeeklyResponse": {
				"type": "object",
				"description": "Response with weekly MML forecasting details.",
				"properties": {
					"mmlDetails": {
						"type": "array",
						"description": "Collection of weekly MML forecasting details.",
						"items": {
							"$ref": "#/components/schemas/MmlWeeklyDetails"
						}
					}
				},
				"required": [
					"mmlDetails"
				]
			},
			"MmlWeeklyUpdateRequest": {
				"type": "object",
				"description": "Update request for weekly MML forecasting.",
				"properties": {
					"engineCenterId": {
						"type": "string",
						"description": "The selected engine center Id."
					},
					"engineGroupId": {
						"type": "string",
						"description": "The selected engine group Id."
					},
					"mmlDetails": {
						"type": "array",
						"description": "Update request for weekly MML forecasting.",
						"items": {
							"$ref": "#/components/schemas/MmlWeeklyDetails"
						}
					},
					"planCalendar": {
						"type": "string",
						"description": "The PlanCalendar enumeration. Numeric enum values: 0=CALENDAR, 1=FISCAL",
						"enum": [
							"0",
							"1"
						]
					},
					"planMarket": {
						"type": "string",
						"description": "The PlanMarket enumeration. Numeric enum values: 0=COMMERCIAL, 1=AFTERMARKET",
						"enum": [
							"0",
							"1"
						]
					},
					"planType": {
						"type": "string",
						"description": "The PlanPlanType enumeration. Numeric enum values: 0=INDUCTION, 1=SHIPMENT (Completions), 2=REVENUE (Gate3 Start)",
						"enum": [
							"0",
							"1",
							"2"
						]
					},
					"week": {
						"maximum": 52,
						"minimum": 1,
						"type": "integer",
						"description": "The week number.",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"description": "The selected plan year.",
						"format": "int32"
					}
				},
				"required": [
					"engineCenterId",
					"engineGroupId",
					"mmlDetails",
					"planCalendar",
					"planMarket",
					"planType",
					"week",
					"year"
				]
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"bearerFormat": "jwt",
				"description": "JWT Bearer Authorization.",
				"scheme": "bearer",
				"type": "http"
			}
		}
	}
}
